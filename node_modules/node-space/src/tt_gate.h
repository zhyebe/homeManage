
#ifndef _TT_GATE_H_
#define _TT_GATE_H_

//#ifdef _WIN32
	#define TTGATE_API __declspec(dllexport)
//#else
//	#define TTGATE_API extern
//#endif

typedef enum {
     TT_CONNECT     = 0x10,
     TT_CONNACK     = 0x20,
     TT_PUBLISH     = 0x30,
     TT_PUBACK      = 0x40,
     TT_PUBREC      = 0x50,
     TT_PUBREL      = 0x60,
     TT_PUBCOMP     = 0x70,
     TT_SUBSCRIBE   = 0x80,
     TT_SUBACK      = 0x90,
     TT_UNSUBSCRIBE = 0xA0,
     TT_UNSUBACK    = 0xB0,
     TT_PINGREQ     = 0xC0,
     TT_PINGRESP    = 0xD0,
     TT_DISCONNECT  = 0xE0,
     TT_DATA        = 0xF0
} TT_MSG_SIG;

typedef void (*ttgate_connack_callback)(void* ud_, const char* fromid_, unsigned char rcode_);
typedef void (*ttgate_recv_callback)(void* ud_, const char* fromid_, const char* key_, int sig_, char* data_, int siz_);
typedef void (*ttgate_publish_callback)(void* ud_, const char* fromid_, const char* topic_, int sig_, char* data_, int siz_);
typedef void (*ttgate_subscribe_callback)(void* ud_, const char* fromid_, const char* topic_);
typedef void (*ttgate_unsubscribe_callback)(void* ud_, const char* fromid_, const char* topic_);
typedef void (*ttgate_puback_callback)(void* ud_, const char* fromid_);
typedef void (*ttgate_pubcomp_callback)(void* ud_, const char* fromid_);
typedef void (*ttgate_suback_callback)(void* ud_, const char* fromid_, const char* topic_);
typedef void (*ttgate_unsuback_callback)(void* ud_, const char* fromid_, const char* topic_);
typedef void (*ttgate_pingresp_callback)(void* ud_, const char* fromid_, const char* key_);
typedef void (*ttgate_identer_callback)(void* ud_, const char* id_);
typedef void (*ttgate_idleave_callback)(void* ud_, const char* id_);

TTGATE_API void* ttgate_new(void* E_, const char* gateid_);
TTGATE_API void ttgate_destroy(void* gate_);
TTGATE_API void ttgate_bind(void* gate_, const char* addr_);
TTGATE_API void ttgate_connect(void* gate_, const char* addr_, const char* id_);
TTGATE_API void ttgate_send(void* gate_, const char* toid_, const char* key_, int sig_, char* data_, int siz_);
TTGATE_API void ttgate_resp(void* gate__, const char* toid_, int sig_, char* data_, int siz_);
TTGATE_API void ttgate_publish(void* gate_, const char* toid_, const char* topic_, int sig_, char* data_, int siz_);
TTGATE_API void ttgate_subscribe(void* gate_, const char* toid_, const char* topic_);
TTGATE_API void ttgate_unsubscribe(void* gate_, const char* toid_, const char* topic_);
TTGATE_API void ttgate_pingreq(void* gate_, const char* toid_, const char* key_);
TTGATE_API void ttgate_pingresp(void* gate_, const char* toid_, char* data_, int siz_);
TTGATE_API void ttgate_disconnect(void* gate_, const char* toid_);
TTGATE_API void ttgate_registerconnack(void* gate_, void* ud_, ttgate_connack_callback cb_);

TTGATE_API void ttgate_registerrecv(void* gate_, void* ud_, ttgate_recv_callback cb_);
TTGATE_API void ttgate_unregisterrecv(void* gate_, void* ud_);

TTGATE_API void ttgate_registerpublish(void* gate_, void* ud_, ttgate_publish_callback cb_);
TTGATE_API void ttgate_registersubscribe(void* gate_, void* ud_, ttgate_subscribe_callback cb_);
TTGATE_API void ttgate_registerunsubscribe(void* gate_, void* ud_, ttgate_unsubscribe_callback cb_);
TTGATE_API void ttgate_registerpuback(void* gate_, void* ud_, ttgate_puback_callback cb_);
TTGATE_API void ttgate_registerpubcomp(void* gate_, void* ud_, ttgate_pubcomp_callback cb_);
TTGATE_API void ttgate_registersuback(void* gate_, void* ud_, ttgate_suback_callback cb_);
TTGATE_API void ttgate_registerunsuback(void* gate_, void* ud_, ttgate_unsuback_callback cb_);
TTGATE_API void ttgate_registerpingresp(void* gate_, void* ud_, ttgate_pingresp_callback cb_);
TTGATE_API void ttgate_registeridenter(void* gate_, void* ud_, ttgate_identer_callback cb_);
TTGATE_API void ttgate_registeridleave(void* gate_, void* ud_, ttgate_idleave_callback cb_);

#endif // _TT_GATE_H_
